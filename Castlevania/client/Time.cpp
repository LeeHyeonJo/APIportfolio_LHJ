#include "Time.h"

//  네임 스페이스 : 게임 


// 1. 스테틱 변수는 외부에서 초기화 (단, 풀네임으로 쓸 것) 
// 이때 쓰인 자료형은 구조체 이므로, 초기화는 숫자가 아니라 {}로 해주어야 함. 


// 11. 초기화 : 제일처음 얼마나 진동했는지 받아야 함
// - CPU의 고유 진동수를 가져온다.  --- 이전 정보 

// 변수: 쿼리퍼포먼스프리퀀시(); // 인자로 포인터가 들어감. 
// ㄴ 주소를 넣어준다 (고유진동수변수의 주소를) 

// 프로그램이 시작됐을때, 진동수를 가져온다. 
// 함수: 쿼리 퍼폽먼스 카운트  -- 현재 정보 (프리브) 
// ㄴ 현 진동수의 주소를 넣어준다 



// 22.  업데이트 
// **여기서 델타 타임을 구한다. 

// 함수: 진동수 가져오기 (현재 진동수)

// ** 여기에 델타타임을 구할 것 - 
// 일단 진도수 차이를 먼저 찾음 = 커렌트(현재) - 이전 (프리브) // 구조체이므로 쿼드타임 (이건 내부 뜯어보기) 

// <델타값 구하는 법: 진동수 차이 / 씨피유 고유 진동수> (static_cast 는 그냥 외우기) 
// 변수: 델타타임 = 위에꺼 그대로 
/// ** C++ 스타일의 형변환으로 작성. 

// *. 프리브의 쿼드파트 (구조체 두개 가 다 시간을 담고 있으니까 쿼드로 써야함) 을 커렌트로 바꿔주는 것. 


/// 33. 렌더:  구한 시간을 출력할 것이다 
// 델타 타임: 걸린 시간 

// 위쪽의 스테텍은, 조건은 1초마다만 출력되도록 하는 것. 

/// 배열 하나 만들고  